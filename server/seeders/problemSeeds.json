[
  {
    "instructions": "Finish the `add` function so that it returns the result of `num1` plus `num2`.",
    "starterCode": "const add = (num1, num2) => {\n//Don't edit above this line.  \n\n\n  //Don't edit below this line. \n}",
    "answers": [ "5", "150" ],
    "tests": [ "add(3,2)", "add(100,50)" ],
    "solution": "var add = function(num1, num2) {\n\treturn num1 + num2\n}",
    "tier": 1,
    "lore": "Two numbers whisper secrets of the night,\n\nCombine their shadows and reveal the sum's hidden might.",
    "title": "The First Hurdle"
  },
  {
    "instructions": "Finish the `logEvenNums` function so that it returns an array of even numbers from 0 to `num`.",
    "starterCode": "const logEvenNums = (num) => {\n //Don't edit above this line.  \n\n\n //Don't edit below this line. \n}",
    "answers": [ "[ 2 ]", "[ 2, 4, 6, 8, 10, 12 ]" ],
    "tests": [ "logEvenNums(3)", "logEvenNums(13)" ],
    "solution": "const logEvenNums = (num) => { \nfor (let i = 0; i <= num; i++) {\n let numArray = []\n if (i % 2 === 0) {\nnumArray.push(i)\n}\n}\n} ",
    "tier": 2,
    "lore": "From zero to a threshold, a chilling array shall rise,\n\nEven figures emerge in the dark, under watchful eyes.",
    "title": "Double Trouble"
  },
  {
    "instructions": "Finish the `countdown` function so that it returns an array with all numbers from 'num' to 0",
    "starterCode": "const countdown = (num) => {\n //Don't edit above this line. \n\n\n //Don't edit below this line. \n}",
    "answers": [ "[3,2,1,0]", "[ 7,6,5,4,3,2,1,0 ]"  ],
    "tests": [ "countdown(3)", "countdown(7)" ],
    "solution": "const countdown = (num) => {\nconst countDownArray = [] for (let i = num: i >= 0; i--) {\n countDownArray.push(i)\n}\n return countDownArray \n}",
    "tier": 3,
    "lore": "Begin with a number, and descend into the void,\n\nEach step closer to silence, where nothing's left to avoid.",
    "title": "Third Times the Charm?"
  }

]